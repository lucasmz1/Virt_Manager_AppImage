name: Universal CI

# Controls when the action will run.
on:
  # Build at 00:00 every 6th day
  schedule:
    - cron: "0 0 */6 * *"
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Make AppImage
        run: |
          echo $PATH
          chmod a+x virt-manager.sh
          ./virt-manager.sh
          mkdir dist
          mv *.AppImage* dist/
          mv *.AppBundle* dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppImage
          path: 'dist/*.AppImage*'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppBundle
          path: 'dist/*.AppBundle*'

      - name: Upload version artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: 'dist/version'

  release:
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download AppImage artifact
        uses: actions/download-artifact@v4
        with:
          name: AppImage
          name1: AppBundle
          
      - name: Delete Previous Release
        run: |
          gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y || echo "No release to delete"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Continuous universal"
          tag_name: continuous-universal
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.AppImage*
            *.AppBundle*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
